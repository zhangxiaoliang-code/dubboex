<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://dubbo.apache.org/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd        http://dubbo.apache.org/schema/dubbo        http://dubbo.apache.org/schema/dubbo/dubbo.xsd">

    <!-- 消费方应用名，用于计算依赖关系，不是匹配条件，不要与提供方一样 -->
    <dubbo:application name="dubbo-demo-api-consumer">
        <dubbo:parameter key="qos.enable" value="true"/>
        <dubbo:parameter key="qos.accept.foreign.ip" value="false"/>
        <dubbo:parameter key="qos.port" value="3333"/>
    </dubbo:application>

    <!-- 使用 Zookeeper 注册中心暴露发现服务地址 -->

    <!--<dubbo:registry id="BJS" address="zookeeper://192.168.71.7:2181,192.168.71.7:2182,192.168.71.7:2183"/>-->

    <dubbo:registry id="BJS" address="zookeeper://127.0.0.1:2181"/>

    <!-- 生成远程服务代理，可以和本地bean一样使用demoService -->
    <!--    可以通过 check="false" 关闭检查，比如，测试时，有些服务不关心，或者出现了循环依赖，必须有一方先启动。-->
    <!--    失败自动切换，当出现失败，重试其它服务器 [1]。通常用于读操作，但重试会带来更长延迟。可通过 retries="2" 来设置重试次数(不含第一次)-->
    <!--    ConsistentHash LoadBalance: 一致性 Hash，相同参数的请求总是发到同一提供者-->
    <!--    结果缓存，用于加速热门数据的访问速度，Dubbo 提供声明式缓存: lru 基于最近最少使用原则删除多余缓存，保持最热的数据被缓存。threadlocal 当前线程缓存。jcache 与 JSR107 集成，可以桥接各种缓存实现。-->
    <dubbo:reference id="simpleS" interface="com.cast.vela.dubboex.api.SimpleService" timeout="5000" check="false"
                     retries="2" loadbalance="consistenthash" registry="BJS" version="1.0.0" group="vela2.0"
                     cache="lru"/>
    <dubbo:reference id="serviceA" interface="com.cast.vela.dubboex.api.ServiceAsync" timeout="5000" version="1.0.0"
                     group="vela2.0"/>

</beans>